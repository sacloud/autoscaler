// Copyright 2021 The sacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: handler.proto

package handler

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Handlersが対象リソースをどう扱うべきかを示す
type ResourceInstructions int32

const (
	ResourceInstructions_UNKNOWN ResourceInstructions = 0
	ResourceInstructions_CREATE  ResourceInstructions = 1
	ResourceInstructions_UPDATE  ResourceInstructions = 2
	ResourceInstructions_DELETE  ResourceInstructions = 3
	ResourceInstructions_NOOP    ResourceInstructions = 4 // 特に変更の必要がない状態を示す。参照用のリソースなどで利用される。
)

// Enum value maps for ResourceInstructions.
var (
	ResourceInstructions_name = map[int32]string{
		0: "UNKNOWN",
		1: "CREATE",
		2: "UPDATE",
		3: "DELETE",
		4: "NOOP",
	}
	ResourceInstructions_value = map[string]int32{
		"UNKNOWN": 0,
		"CREATE":  1,
		"UPDATE":  2,
		"DELETE":  3,
		"NOOP":    4,
	}
)

func (x ResourceInstructions) Enum() *ResourceInstructions {
	p := new(ResourceInstructions)
	*p = x
	return p
}

func (x ResourceInstructions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceInstructions) Descriptor() protoreflect.EnumDescriptor {
	return file_handler_proto_enumTypes[0].Descriptor()
}

func (ResourceInstructions) Type() protoreflect.EnumType {
	return &file_handler_proto_enumTypes[0]
}

func (x ResourceInstructions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceInstructions.Descriptor instead.
func (ResourceInstructions) EnumDescriptor() ([]byte, []int) {
	return file_handler_proto_rawDescGZIP(), []int{0}
}

type HandleResponse_Status int32

const (
	HandleResponse_UNKNOWN  HandleResponse_Status = 0
	HandleResponse_ACCEPTED HandleResponse_Status = 1
	HandleResponse_RUNNING  HandleResponse_Status = 2
	HandleResponse_DONE     HandleResponse_Status = 3
	HandleResponse_CANCELED HandleResponse_Status = 4
	HandleResponse_FAILED   HandleResponse_Status = 5
)

// Enum value maps for HandleResponse_Status.
var (
	HandleResponse_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "ACCEPTED",
		2: "RUNNING",
		3: "DONE",
		4: "CANCELED",
		5: "FAILED",
	}
	HandleResponse_Status_value = map[string]int32{
		"UNKNOWN":  0,
		"ACCEPTED": 1,
		"RUNNING":  2,
		"DONE":     3,
		"CANCELED": 4,
		"FAILED":   5,
	}
)

func (x HandleResponse_Status) Enum() *HandleResponse_Status {
	p := new(HandleResponse_Status)
	*p = x
	return p
}

func (x HandleResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HandleResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_handler_proto_enumTypes[1].Descriptor()
}

func (HandleResponse_Status) Type() protoreflect.EnumType {
	return &file_handler_proto_enumTypes[1]
}

func (x HandleResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HandleResponse_Status.Descriptor instead.
func (HandleResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_handler_proto_rawDescGZIP(), []int{1, 0}
}

type HandleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Inputから引き渡し
	Source            string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Action            string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	ResourceGroupName string `protobuf:"bytes,3,opt,name=resource_group_name,json=resourceGroupName,proto3" json:"resource_group_name,omitempty"`
	// Coreからの指示情報
	ScalingJobId string      `protobuf:"bytes,4,opt,name=scaling_job_id,json=scalingJobId,proto3" json:"scaling_job_id,omitempty"`
	Resources    []*Resource `protobuf:"bytes,5,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *HandleRequest) Reset() {
	*x = HandleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRequest) ProtoMessage() {}

func (x *HandleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_handler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRequest.ProtoReflect.Descriptor instead.
func (*HandleRequest) Descriptor() ([]byte, []int) {
	return file_handler_proto_rawDescGZIP(), []int{0}
}

func (x *HandleRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *HandleRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *HandleRequest) GetResourceGroupName() string {
	if x != nil {
		return x.ResourceGroupName
	}
	return ""
}

func (x *HandleRequest) GetScalingJobId() string {
	if x != nil {
		return x.ScalingJobId
	}
	return ""
}

func (x *HandleRequest) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type HandleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScalingJobId string                `protobuf:"bytes,1,opt,name=scaling_job_id,json=scalingJobId,proto3" json:"scaling_job_id,omitempty"`
	Status       HandleResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=autoscaler.HandleResponse_Status" json:"status,omitempty"`
	Log          string                `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"` // stdout & stderr
}

func (x *HandleResponse) Reset() {
	*x = HandleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleResponse) ProtoMessage() {}

func (x *HandleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_handler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleResponse.ProtoReflect.Descriptor instead.
func (*HandleResponse) Descriptor() ([]byte, []int) {
	return file_handler_proto_rawDescGZIP(), []int{1}
}

func (x *HandleResponse) GetScalingJobId() string {
	if x != nil {
		return x.ScalingJobId
	}
	return ""
}

func (x *HandleResponse) GetStatus() HandleResponse_Status {
	if x != nil {
		return x.Status
	}
	return HandleResponse_UNKNOWN
}

func (x *HandleResponse) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

// リソース型
type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Resource:
	//	*Resource_Server
	//	*Resource_ServerGroup
	//	*Resource_Elb
	//	*Resource_Gslb
	//	*Resource_Dns
	Resource isResource_Resource `protobuf_oneof:"resource"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_handler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_handler_proto_rawDescGZIP(), []int{2}
}

func (m *Resource) GetResource() isResource_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (x *Resource) GetServer() *Server {
	if x, ok := x.GetResource().(*Resource_Server); ok {
		return x.Server
	}
	return nil
}

func (x *Resource) GetServerGroup() *ServerGroup {
	if x, ok := x.GetResource().(*Resource_ServerGroup); ok {
		return x.ServerGroup
	}
	return nil
}

func (x *Resource) GetElb() *ELB {
	if x, ok := x.GetResource().(*Resource_Elb); ok {
		return x.Elb
	}
	return nil
}

func (x *Resource) GetGslb() *GSLB {
	if x, ok := x.GetResource().(*Resource_Gslb); ok {
		return x.Gslb
	}
	return nil
}

func (x *Resource) GetDns() *DNS {
	if x, ok := x.GetResource().(*Resource_Dns); ok {
		return x.Dns
	}
	return nil
}

type isResource_Resource interface {
	isResource_Resource()
}

type Resource_Server struct {
	Server *Server `protobuf:"bytes,10,opt,name=server,proto3,oneof"`
}

type Resource_ServerGroup struct {
	ServerGroup *ServerGroup `protobuf:"bytes,11,opt,name=server_group,json=serverGroup,proto3,oneof"`
}

type Resource_Elb struct {
	Elb *ELB `protobuf:"bytes,12,opt,name=elb,proto3,oneof"`
}

type Resource_Gslb struct {
	Gslb *GSLB `protobuf:"bytes,13,opt,name=gslb,proto3,oneof"`
}

type Resource_Dns struct {
	Dns *DNS `protobuf:"bytes,14,opt,name=dns,proto3,oneof"`
}

func (*Resource_Server) isResource_Resource() {}

func (*Resource_ServerGroup) isResource_Resource() {}

func (*Resource_Elb) isResource_Resource() {}

func (*Resource_Gslb) isResource_Resource() {}

func (*Resource_Dns) isResource_Resource() {}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruction     ResourceInstructions `protobuf:"varint,1,opt,name=instruction,proto3,enum=autoscaler.ResourceInstructions" json:"instruction,omitempty"`
	Id              string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Zone            string               `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`
	Core            uint32               `protobuf:"varint,4,opt,name=core,proto3" json:"core,omitempty"`
	Memory          uint32               `protobuf:"varint,5,opt,name=memory,proto3" json:"memory,omitempty"`
	DedicatedCpu    bool                 `protobuf:"varint,6,opt,name=dedicated_cpu,json=dedicatedCpu,proto3" json:"dedicated_cpu,omitempty"`
	PrivateHostId   string               `protobuf:"bytes,7,opt,name=private_host_id,json=privateHostId,proto3" json:"private_host_id,omitempty"`
	AssignedNetwork []*NetworkInfo       `protobuf:"bytes,8,rep,name=assigned_network,json=assignedNetwork,proto3" json:"assigned_network,omitempty"` // TODO その他渡すパラメータを整理する
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_handler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_handler_proto_rawDescGZIP(), []int{3}
}

func (x *Server) GetInstruction() ResourceInstructions {
	if x != nil {
		return x.Instruction
	}
	return ResourceInstructions_UNKNOWN
}

func (x *Server) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Server) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Server) GetCore() uint32 {
	if x != nil {
		return x.Core
	}
	return 0
}

func (x *Server) GetMemory() uint32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Server) GetDedicatedCpu() bool {
	if x != nil {
		return x.DedicatedCpu
	}
	return false
}

func (x *Server) GetPrivateHostId() string {
	if x != nil {
		return x.PrivateHostId
	}
	return ""
}

func (x *Server) GetAssignedNetwork() []*NetworkInfo {
	if x != nil {
		return x.AssignedNetwork
	}
	return nil
}

type ServerGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers  []*Server  `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	Wrappers []*Wrapper `protobuf:"bytes,2,rep,name=wrappers,proto3" json:"wrappers,omitempty"`
}

func (x *ServerGroup) Reset() {
	*x = ServerGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGroup) ProtoMessage() {}

func (x *ServerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_handler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGroup.ProtoReflect.Descriptor instead.
func (*ServerGroup) Descriptor() ([]byte, []int) {
	return file_handler_proto_rawDescGZIP(), []int{4}
}

func (x *ServerGroup) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *ServerGroup) GetWrappers() []*Wrapper {
	if x != nil {
		return x.Wrappers
	}
	return nil
}

type Wrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*Wrapper `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
	// Types that are assignable to Wrapper:
	//	*Wrapper_Elb
	//	*Wrapper_Gslb
	//	*Wrapper_Dns
	Wrapper isWrapper_Wrapper `protobuf_oneof:"wrapper"`
}

func (x *Wrapper) Reset() {
	*x = Wrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wrapper) ProtoMessage() {}

func (x *Wrapper) ProtoReflect() protoreflect.Message {
	mi := &file_handler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wrapper.ProtoReflect.Descriptor instead.
func (*Wrapper) Descriptor() ([]byte, []int) {
	return file_handler_proto_rawDescGZIP(), []int{5}
}

func (x *Wrapper) GetChildren() []*Wrapper {
	if x != nil {
		return x.Children
	}
	return nil
}

func (m *Wrapper) GetWrapper() isWrapper_Wrapper {
	if m != nil {
		return m.Wrapper
	}
	return nil
}

func (x *Wrapper) GetElb() *ELB {
	if x, ok := x.GetWrapper().(*Wrapper_Elb); ok {
		return x.Elb
	}
	return nil
}

func (x *Wrapper) GetGslb() *GSLB {
	if x, ok := x.GetWrapper().(*Wrapper_Gslb); ok {
		return x.Gslb
	}
	return nil
}

func (x *Wrapper) GetDns() *DNS {
	if x, ok := x.GetWrapper().(*Wrapper_Dns); ok {
		return x.Dns
	}
	return nil
}

type isWrapper_Wrapper interface {
	isWrapper_Wrapper()
}

type Wrapper_Elb struct {
	Elb *ELB `protobuf:"bytes,10,opt,name=elb,proto3,oneof"`
}

type Wrapper_Gslb struct {
	Gslb *GSLB `protobuf:"bytes,11,opt,name=gslb,proto3,oneof"`
}

type Wrapper_Dns struct {
	Dns *DNS `protobuf:"bytes,12,opt,name=dns,proto3,oneof"`
}

func (*Wrapper_Elb) isWrapper_Wrapper() {}

func (*Wrapper_Gslb) isWrapper_Wrapper() {}

func (*Wrapper_Dns) isWrapper_Wrapper() {}

type ELB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruction      ResourceInstructions `protobuf:"varint,1,opt,name=instruction,proto3,enum=autoscaler.ResourceInstructions" json:"instruction,omitempty"`
	Id               string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Plan             uint32               `protobuf:"varint,3,opt,name=plan,proto3" json:"plan,omitempty"`
	VirtualIpAddress string               `protobuf:"bytes,4,opt,name=virtual_ip_address,json=virtualIpAddress,proto3" json:"virtual_ip_address,omitempty"`
	Fqdn             string               `protobuf:"bytes,5,opt,name=fqdn,proto3" json:"fqdn,omitempty"` // TODO その他渡すパラメータを整理
}

func (x *ELB) Reset() {
	*x = ELB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ELB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ELB) ProtoMessage() {}

func (x *ELB) ProtoReflect() protoreflect.Message {
	mi := &file_handler_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ELB.ProtoReflect.Descriptor instead.
func (*ELB) Descriptor() ([]byte, []int) {
	return file_handler_proto_rawDescGZIP(), []int{6}
}

func (x *ELB) GetInstruction() ResourceInstructions {
	if x != nil {
		return x.Instruction
	}
	return ResourceInstructions_UNKNOWN
}

func (x *ELB) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ELB) GetPlan() uint32 {
	if x != nil {
		return x.Plan
	}
	return 0
}

func (x *ELB) GetVirtualIpAddress() string {
	if x != nil {
		return x.VirtualIpAddress
	}
	return ""
}

func (x *ELB) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

type GSLB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruction ResourceInstructions `protobuf:"varint,1,opt,name=instruction,proto3,enum=autoscaler.ResourceInstructions" json:"instruction,omitempty"`
	Id          string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Fqdn        string               `protobuf:"bytes,3,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
}

func (x *GSLB) Reset() {
	*x = GSLB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSLB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSLB) ProtoMessage() {}

func (x *GSLB) ProtoReflect() protoreflect.Message {
	mi := &file_handler_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSLB.ProtoReflect.Descriptor instead.
func (*GSLB) Descriptor() ([]byte, []int) {
	return file_handler_proto_rawDescGZIP(), []int{7}
}

func (x *GSLB) GetInstruction() ResourceInstructions {
	if x != nil {
		return x.Instruction
	}
	return ResourceInstructions_UNKNOWN
}

func (x *GSLB) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GSLB) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

type DNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruction ResourceInstructions `protobuf:"varint,1,opt,name=instruction,proto3,enum=autoscaler.ResourceInstructions" json:"instruction,omitempty"`
	Id          string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Zone        string               `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`
}

func (x *DNS) Reset() {
	*x = DNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNS) ProtoMessage() {}

func (x *DNS) ProtoReflect() protoreflect.Message {
	mi := &file_handler_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNS.ProtoReflect.Descriptor instead.
func (*DNS) Descriptor() ([]byte, []int) {
	return file_handler_proto_rawDescGZIP(), []int{8}
}

func (x *DNS) GetInstruction() ResourceInstructions {
	if x != nil {
		return x.Instruction
	}
	return ResourceInstructions_UNKNOWN
}

func (x *DNS) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DNS) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

type NetworkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress string `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Netmask   uint32 `protobuf:"varint,2,opt,name=netmask,proto3" json:"netmask,omitempty"`
	Gateway   string `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
}

func (x *NetworkInfo) Reset() {
	*x = NetworkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInfo) ProtoMessage() {}

func (x *NetworkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_handler_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInfo.ProtoReflect.Descriptor instead.
func (*NetworkInfo) Descriptor() ([]byte, []int) {
	return file_handler_proto_rawDescGZIP(), []int{9}
}

func (x *NetworkInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NetworkInfo) GetNetmask() uint32 {
	if x != nil {
		return x.Netmask
	}
	return 0
}

func (x *NetworkInfo) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

var File_handler_proto protoreflect.FileDescriptor

var file_handler_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x22, 0xc9, 0x01, 0x0a, 0x0d,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4a, 0x6f,
	0x62, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x0e, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x63,
	0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0x54, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x05, 0x22, 0xf4, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x2c, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3c,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x23, 0x0a, 0x03,
	0x65, 0x6c, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x45, 0x4c, 0x42, 0x48, 0x00, 0x52, 0x03, 0x65, 0x6c,
	0x62, 0x12, 0x26, 0x0a, 0x04, 0x67, 0x73, 0x6c, 0x62, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x47, 0x53, 0x4c,
	0x42, 0x48, 0x00, 0x52, 0x04, 0x67, 0x73, 0x6c, 0x62, 0x12, 0x23, 0x0a, 0x03, 0x64, 0x6e, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x72, 0x2e, 0x44, 0x4e, 0x53, 0x48, 0x00, 0x52, 0x03, 0x64, 0x6e, 0x73, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xad, 0x02, 0x0a, 0x06, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x70, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x43, 0x70, 0x75, 0x12, 0x26,
	0x0a, 0x0f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x6c, 0x0a, 0x0b, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x08,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x07, 0x57, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x72, 0x2e, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x03, 0x65, 0x6c, 0x62, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e,
	0x45, 0x4c, 0x42, 0x48, 0x00, 0x52, 0x03, 0x65, 0x6c, 0x62, 0x12, 0x26, 0x0a, 0x04, 0x67, 0x73,
	0x6c, 0x62, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x47, 0x53, 0x4c, 0x42, 0x48, 0x00, 0x52, 0x04, 0x67, 0x73,
	0x6c, 0x62, 0x12, 0x23, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x44, 0x4e, 0x53,
	0x48, 0x00, 0x52, 0x03, 0x64, 0x6e, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x0a, 0x22, 0xaf, 0x01, 0x0a, 0x03, 0x45, 0x4c, 0x42,
	0x12, 0x42, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x22, 0x6e, 0x0a, 0x04, 0x47, 0x53,
	0x4c, 0x42, 0x12, 0x42, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x22, 0x6d, 0x0a, 0x03, 0x44, 0x4e,
	0x53, 0x12, 0x42, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x60, 0x0a, 0x0b, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x6d, 0x61, 0x73,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2a, 0x51, 0x0a, 0x14, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4f, 0x50, 0x10, 0x04, 0x32, 0x52,
	0x0a, 0x0d, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x41, 0x0a, 0x06, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x72, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x30, 0x01, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x61, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x72, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_handler_proto_rawDescOnce sync.Once
	file_handler_proto_rawDescData = file_handler_proto_rawDesc
)

func file_handler_proto_rawDescGZIP() []byte {
	file_handler_proto_rawDescOnce.Do(func() {
		file_handler_proto_rawDescData = protoimpl.X.CompressGZIP(file_handler_proto_rawDescData)
	})
	return file_handler_proto_rawDescData
}

var file_handler_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_handler_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_handler_proto_goTypes = []interface{}{
	(ResourceInstructions)(0),  // 0: autoscaler.ResourceInstructions
	(HandleResponse_Status)(0), // 1: autoscaler.HandleResponse.Status
	(*HandleRequest)(nil),      // 2: autoscaler.HandleRequest
	(*HandleResponse)(nil),     // 3: autoscaler.HandleResponse
	(*Resource)(nil),           // 4: autoscaler.Resource
	(*Server)(nil),             // 5: autoscaler.Server
	(*ServerGroup)(nil),        // 6: autoscaler.ServerGroup
	(*Wrapper)(nil),            // 7: autoscaler.Wrapper
	(*ELB)(nil),                // 8: autoscaler.ELB
	(*GSLB)(nil),               // 9: autoscaler.GSLB
	(*DNS)(nil),                // 10: autoscaler.DNS
	(*NetworkInfo)(nil),        // 11: autoscaler.NetworkInfo
}
var file_handler_proto_depIdxs = []int32{
	4,  // 0: autoscaler.HandleRequest.resources:type_name -> autoscaler.Resource
	1,  // 1: autoscaler.HandleResponse.status:type_name -> autoscaler.HandleResponse.Status
	5,  // 2: autoscaler.Resource.server:type_name -> autoscaler.Server
	6,  // 3: autoscaler.Resource.server_group:type_name -> autoscaler.ServerGroup
	8,  // 4: autoscaler.Resource.elb:type_name -> autoscaler.ELB
	9,  // 5: autoscaler.Resource.gslb:type_name -> autoscaler.GSLB
	10, // 6: autoscaler.Resource.dns:type_name -> autoscaler.DNS
	0,  // 7: autoscaler.Server.instruction:type_name -> autoscaler.ResourceInstructions
	11, // 8: autoscaler.Server.assigned_network:type_name -> autoscaler.NetworkInfo
	5,  // 9: autoscaler.ServerGroup.servers:type_name -> autoscaler.Server
	7,  // 10: autoscaler.ServerGroup.wrappers:type_name -> autoscaler.Wrapper
	7,  // 11: autoscaler.Wrapper.children:type_name -> autoscaler.Wrapper
	8,  // 12: autoscaler.Wrapper.elb:type_name -> autoscaler.ELB
	9,  // 13: autoscaler.Wrapper.gslb:type_name -> autoscaler.GSLB
	10, // 14: autoscaler.Wrapper.dns:type_name -> autoscaler.DNS
	0,  // 15: autoscaler.ELB.instruction:type_name -> autoscaler.ResourceInstructions
	0,  // 16: autoscaler.GSLB.instruction:type_name -> autoscaler.ResourceInstructions
	0,  // 17: autoscaler.DNS.instruction:type_name -> autoscaler.ResourceInstructions
	2,  // 18: autoscaler.HandleService.Handle:input_type -> autoscaler.HandleRequest
	3,  // 19: autoscaler.HandleService.Handle:output_type -> autoscaler.HandleResponse
	19, // [19:20] is the sub-list for method output_type
	18, // [18:19] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_handler_proto_init() }
func file_handler_proto_init() {
	if File_handler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_handler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ELB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GSLB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_handler_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Resource_Server)(nil),
		(*Resource_ServerGroup)(nil),
		(*Resource_Elb)(nil),
		(*Resource_Gslb)(nil),
		(*Resource_Dns)(nil),
	}
	file_handler_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Wrapper_Elb)(nil),
		(*Wrapper_Gslb)(nil),
		(*Wrapper_Dns)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_handler_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_handler_proto_goTypes,
		DependencyIndexes: file_handler_proto_depIdxs,
		EnumInfos:         file_handler_proto_enumTypes,
		MessageInfos:      file_handler_proto_msgTypes,
	}.Build()
	File_handler_proto = out.File
	file_handler_proto_rawDesc = nil
	file_handler_proto_goTypes = nil
	file_handler_proto_depIdxs = nil
}
