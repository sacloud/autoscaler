syntax            = "proto3";
option go_package = "github.com/sacloud/autoscaler/request";

package autoscaler;

// Scalingサービスの定義
//
// sacloud/autoscalerのCoreがサービスを公開し、Inputsがクライアントとして実装する
service ScalingService {
  // Up スケールアップ or スケールアウトのリクエスト
  rpc Up(ScalingRequest) returns (ScalingResponse);
  // Down スケールダウン or スケールインのリクエスト
  rpc Down(ScalingRequest) returns (ScalingResponse);
}

// Scalingサービスのリクエストパラメータ
message ScalingRequest {
  // 呼び出し元を示すラベル値、Coreでの処理には影響しない。デフォルト値:
  // "default"
  string source = 1;

  // 操作対象のリソース名。リソース名にはCoreのコンフィギュレーションの中で定義した名前を指定する
  // 対応するリソース名がCoreで見つけられなかった場合はエラーを返す
  //
  // デフォルト値: "default"
  // デフォルト値を指定した場合はCoreのコンフィギュレーションで定義された先頭のリソースが操作対象となる
  string resource_name = 2;

  // 希望するスケール(プランなど)につけた名前
  // 特定のスケールに一気にスケールを変更したい場合に指定する
  // 指定する名前はCoreのコンフィギュレーションで定義しておく必要がある
  string desired_state_name = 3;
}

// Scalingサービスのレスポンス
message ScalingResponse {
  // スケールジョブのID
  // リクエストパラメータに応じてCoreがジョブを起動しIDを割り当てたもの
  string scaling_job_id = 1;

  // スケールジョブのステータス
  // Coreがリクエストを処理した段階のステータスを返す
  ScalingJobStatus status = 2;

  // Coreからのメッセージ
  // 何らかの事情でリクエストを受け付けられなかった場合の理由が記載される
  string message = 3;
}

// ジョブのステータス
enum ScalingJobStatus {
  JOB_UNKNOWN   = 0; // 不明
  JOB_ACCEPTED  = 1; // 受付済み
  JOB_RUNNING   = 2; // 実行中
  JOB_DONE      = 3; // 完了(ハンドラが処理を行った)
  JOB_CANCELED  = 4; // 開始前に中断
  JOB_IGNORED   = 5; // 無視(受け入れなかった)
  JOB_FAILED    = 6; // 失敗/エラー
  JOB_DONE_NOOP = 7; // 完了(ハンドラが何も処理しなかった)
}
