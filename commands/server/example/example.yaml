# 操作対象のリソースの定義
resources:
  web:

    # アクションの定義: Up/Downリクエスト時に指定するアクション名をここで定義する
    # アクションごとにハンドラーを限定したい場合に利用したいハンドラーを指定する
    #  actions:
    #    server-vertical-scaling:
    #      - server-vertical-scaler
    #      - elb-servers-handler
    #    elb-vertical-scaling:
    #      - elb-vertical-scaler

    # スケールさせたいリソース群をここで定義する
    resources:
      # サーバ(垂直スケール)
      - type: Server
        selector:
          names: ["example"]
          zone: "is1a"
        # プラン(省略可)、省略した場合はデフォルトのプラン範囲内でスケールする
        plans:
          - core: 1
            memory: 1
          - core: 2
            memory: 4
          - core: 4
            memory: 8
        # スケール時の動作オプション
        option:
          shutdown_force: true

      # エンハンスドロードバランサ(垂直スケール)
      # - type: ELB
      #   selector:
      #     names: ["example"]
      #   #プラン(省略可)
      #   plans:
      #     - cps: 100
      #     - cps: 500
      #     - cps: 1000

      # エンハンスドロードバランサ + サーバ(垂直スケール)
      # サーバの垂直スケール時にELBからのデタッチ/アタッチを行う
      # - type: ELB
      #   selector:
      #     names: ["example"]
      #   resources:
      #     - type: Server
      #       selector:
      #         names: ["example1"]
      #         zone: "is1a"
      #     - type: Server
      #       selector:
      #         names: ["example2"]
      #         zone: "is1a"

      # GSLB + サーバ(垂直スケール)
      # サーバの垂直スケール時にGSLBからのデタッチ/アタッチを行う
      # - type: GSLB
      #   selector:
      #     names: ["example"]
      #   resources:
      #     - type: Server
      #       selector:
      #         names: ["example1"]
      #         zone: "is1a"
      #     - type: Server
      #       selector:
      #         names: ["example2"]
      #         zone: "is1a"

      # ルータ(垂直スケール)
      # - type: Router
      #   selector:
      #     names: ["example"]
      #     zone: "is1a"
      #   # プラン(省略可)
      #   plans:
      #     - band_width: 100
      #     - band_width: 250
      #     - band_width: 500

# カスタムハンドラーの定義
# handlers:
#   - name: "example"
#     endpoint: "unix:autoscaler-handlers-example.sock"

# オートスケーラーの動作設定
autoscaler:
  job_cooling_sec: 6000 # デフォルト: 6000(10分)